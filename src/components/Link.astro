---
// Henter parametrene fra Astro.props
const { href = "#", target = "_self", variant = "", size = "", hover = "", press = "", textcolor = "primary", showIcon = true } = Astro.props;

const linkClasses = "";

const variantClasses = {
  primary: "bg-yellow-300 rounded-full lg:py-xs py-2xs px-m text-m_button lg:text-d_button font-opensans",
  secondary: "bg-green-700  rounded-full lg:py-xs py-2xs px-m text-m_button lg:text-d_button font-opensans ",
  tertiary: "text-m_button lg:text-d_button font-opensans",
  menupunkt: "lg:text-d_menupunkt text-m_menupunkt font-montserrat",
  undermenupunkt: " lg:text-d_undermenupunkt text-m_undermenupunkt font-montserrat",
  footer: " lg:text-d_h8 text-m_h8 font-opensans",
};

const sizeClasses = {
  null: "w-fit",
  small: "w-fit flex items-center gap-m",
  large: "w-fit lg:py-xs lg:px-m flex items-center gap-5xl lg:gap-ml xl:gap-5xl",
};

const hoverClasses = {
  primary: "hover:scale-105 transition-transform",
  secondary: "hover:scale-105 transition-transform",
  tertiary: " hover:underline",
};

const pressClasses = {
  primary: "active:bg-yellow-400 hover:scale-105 transition-transform",
  secondary: "active:bg-green-800 hover:scale-105 transition-transform",
  tertiary: "",
};

const textcolorClasses = {
  primary: "text-neutral-950",
  secondary: "text-neutral-50",
};
---

<a href={href} class="" target={target}>
  <div class:list={[linkClasses, variantClasses[variant], sizeClasses[size], hoverClasses[hover], pressClasses[press], textcolorClasses[textcolor]]}>
    <slot />
    {
      showIcon && (
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2.5" stroke="currentColor" class="lg:size-6 size-4">
          <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3" />
        </svg>
      )
    }
  </div>
</a>
